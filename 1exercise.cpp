//#include<stdio.h>
//
//void main() {
///*取反进阶版	
//	int a = 0;
//	scanf_s("%d",&a);
//	printf("a=%d", ~a);
//}*///a=-3
//	//取反普通版
//	int a = ~2;
//	printf("a=%d", a);//a=-3
//}

//===按位与操作===
//#include<stdio.h>
//void main() {
	//int b = 2 & -3;
	//printf("b=%d", b);
//}
//结果为0
/*
2的原码：00000000000000000000000000000010
2的补码：00000000000000000000000000000010
-3的原码 10000000000000000000000000000011
-3的补码 11111111111111111111111111111101
-3的反码 11111111111111111111111111111100

2&-3
2的补码和-3的补码想与，得全零
所以结果为0
*/

//==移位运算符 >> <<==
#include<stdio.h>
void main() {
	int c = 10 >> 2;
	int d = -1 >> 2;
	printf("c=%d,d=%d", c, d);//结果c=2,d=-1
	//-1的原码10000000000000000000000001
	//-1的反码11111111111111111111111110
	//-1的补码11111111111111111111111111
	//-1右移动两位--负数右移要在左边补1，若是正数的话需要补0，所以
	//此时，-1右移两位之后还是11111111111111111111111111
	//-1右移两位之后的反码为11111111111111111111111110
	//-1右移两位之后的原码为10000000000000000000000001
	//所以-1右移两位之后还是-1
}